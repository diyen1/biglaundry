import {Component, forwardRef, Input, OnInit} from '@angular/core';
import {
  ControlValueAccessor,
  FormControl,
  FormGroup, NG_VALUE_ACCESSOR,
  Validators,
} from '@angular/forms';
import {DomSanitizer} from '@angular/platform-browser';

@Component({
  selector: 'dmwoo-pod',
  templateUrl: './dmwoo-pod.component.html',
  styleUrls: ['./dmwoo-pod.component.scss'],
  providers: [
    {
      provide: NG_VALUE_ACCESSOR,
      useExisting: forwardRef(() => DmwooPodComponent),
      multi: true,
    },
  ],
})
export class DmwooPodComponent implements OnInit, ControlValueAccessor {

  @Input() isRequired = true;

  form: FormGroup;
  onChange;
  onTouched;
  value = '';
  podPhoneField;
  validateFn: any = () => {};

  constructor(private domSanitizer: DomSanitizer) {
  }

  ngOnInit() {
    this.podPhoneField = new FormControl(
      this.value, [
        //
      ],
    );

    if (this.isRequired) {
      this.podPhoneField.setValidators([Validators.required]);
    } else {
      this.podPhoneField.setValidators([]);
    }

    this.form = new FormGroup({
      podPhoneField: this.podPhoneField,
    });
  }

  writeValue(value) {
    this.value = value;
    this.form.get('podPhoneField').setValue(this.value);
  }

  validate(c: FormControl) {
    return this.isRequired ? Validators.required : null;
  }

  registerOnChange(fn: (value: any) => void) {
    this.onChange = fn;
  }

  registerOnTouched(fn: () => void) {
    this.onTouched = fn;
  }

  /*onInputChange(value) {
    this.onChange(value);
  }*/

}
